# See https://github.com/golangci/golangci-lint/blob/master/.golangci.example.yml for all configuration options

run:
  build-tags:
    - ci

  timeout: 5m

linters-settings:
  cyclop:
    max-complexity: 25
    skip-tests: true
  depguard:
    rules:
      main:
        deny:
          - pkg: github.com/satori/go.uuid
            desc: This package has previously broken backwards compatibility in a non-major upgrade. Recommend using github.com/gofrs/uuid instead.
  errcheck:
    exclude-functions:
      - bugsnag.Notify()
      - (bugsnag-go).Notify
      - (*net/http.Client).Do
  exhaustive:
    default-signifies-exhaustive: true
  funlen:
    lines: 150
    statements: 150
  gci:
    sections:
      - standard # Captures all standard packages if they do not match another section.
      - default # Contains all imports that could not be matched to another section type.
      - prefix(github.com/bugsnag) # Groups all imports with the specified Prefix.
    section-separators:
      - newLine
  gocognit:
    min-complexity: 50
  goconst:
    min-occurrences: 8
  ireturn:
    allow:
      - anon
      - error
      - empty
      - stdlib
      - Connection
  lll:
    line-length: 200
  nakedret:
    # make an issue if func has more lines of code than this setting and it has naked returns; default is 30
    # Disallow naked returns
    max-func-lines: 0
  nestif:
    min-complexity: 20
  revive:
    ignore-generated-header: true
    severity: warning
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-return
      - name: error-naming
      - name: exported
      - name: increment-decrement
      - name: var-naming
      - name: var-declaration
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: indent-error-flow
      - name: errorf
      - name: empty-block
      - name: superfluous-else
      - name: unreachable-code
      - name: redefines-builtin-id
  stylecheck:
    # https://staticcheck.io/docs/options#checks
    checks: ["-ST1005"]

linters:
  # Disable all linters by default so we can enable them manually to ensure new linters
  # are not auto included
  disable-all: true
  enable:
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - copyloopvar
    - forbidigo
    - forcetypeassert
    - funlen
    #   - gci
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    #   - godox
    #   - goerr113
    - gofmt
    #   - gofumpt # Don't need the stricter formatting
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - grouper
    #   - ifshort # Changing if statements to short format is not that important
    - importas
    - ineffassign
    #    - ireturn
    - lll
    - maintidx
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    #   - nilnil
    - noctx
    - nolintlint
    #   - prealloc # Too many false positives
    - predeclared
    - promlinter
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    #   - tagliatelle
    - tenv
    - testpackage
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - wastedassign
    - whitespace
#   - wrapcheck # We don't want to force all errors to be wrapped
#   - wsl # We don't really care about enforcing empty lines

issues:
  exclude:
    # Ignore returns from bugsnag.Notify so we don't report on not reporting to Bugsnag
    - Error return value of `bugsnag.Notify` is not checked
    # gosec: Duplicated errcheck checks
    - G104
    # gosec: weak random number generator
    - G404
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
    # golint: Only require comments on methods
    - exported (const|var) .* should have comment or be unexported
    - comment on exported (const|var) .* should be of the form
    - \`ctx\` is unused
    # gocritic: Don't care about this
    - "appendAssign: append result not assigned to the same slice"

  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - scopelint
        - gochecknoglobals
        - noctx
        - contextcheck
        - unparam
        - gocognit
        - goconst
        - goerr113
        - funlen
        - maintidx
        - goconst
        - forcetypeassert
        - makezero
        - forbidigo
        - wastedassign
        - containedctx
        - ireturn
    - path: test/
      linters:
        - funlen
        - unparam
        - gochecknoglobals
        - wastedassign
        - containedctx
        - ireturn
    - path: pkg/
      linters:
        - testpackage
    - path: main_test.go
      linters:
        - testpackage
    - linters:
        - gochecknoglobals
      source: "var .*Script string"
